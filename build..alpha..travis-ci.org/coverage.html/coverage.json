{"/home/travis/build/npmtest/node-npmtest-intelligence/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_intelligence */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/lib.npmtest_intelligence.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/lib.npmtest_intelligence.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_intelligence */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_intelligence = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_intelligence = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":70},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-intelligence && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_intelligence */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_intelligence","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_intelligence.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_intelligence.rollup.js'] =","            local.assetsDict['/assets.npmtest_intelligence.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_intelligence.__dirname +","                    '/lib.npmtest_intelligence.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/intelligence.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/intelligence.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":64}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":64}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":71}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":71}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":59}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":74}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":77}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":104}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":89}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":50}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":66}}},"branchMap":{},"code":["// genetic","exports.Population = require('./genetic/population').Population;","exports.SteadyStatePopulation = require('./genetic/steadyStatePopulation').SteadyStatePopulation;","exports.Individual = require('./genetic/individual').Individual;","exports.crossoverStrategies = require('./genetic/crossoverStrategies');","exports.selectionStrategies = require('./genetic/selectionStrategies');","exports.geneFactories = require('./genetic/geneFactories');","","// linear","exports.RegisterSet = require('./genetic/linear/registerSet').RegisterSet;","exports.LinearGPNode = require('./genetic/linear/linearGPNode').LinearGPNode;","exports.LinearFunctionNode = require('./genetic/linear/linearFunctionNode').LinearFunctionNode;","exports.LinearConditionalNode = require('./genetic/linear/linearConditionalNode').LinearConditionalNode;","exports.LinearIndividual = require('./genetic/linear/linearIndividual').LinearIndividual;","","// infrastructure","exports.utils = require('./infrastructure/utils');","","// neural","exports.transferFunctions = require('./neural/transferFunctions');"],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"10":1,"11":1,"12":1,"13":1,"14":1,"17":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/population.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/population.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":36}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":47},"end":{"line":30,"column":59}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":54},"end":{"line":47,"column":66}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":34},"end":{"line":70,"column":46}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":39},"end":{"line":82,"column":51}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":33},"end":{"line":96,"column":45}}},"7":{"name":"(anonymous_7)","line":121,"loc":{"start":{"line":121,"column":30},"end":{"line":121,"column":42}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":45},"end":{"line":140,"column":71}}},"9":{"name":"(anonymous_9)","line":144,"loc":{"start":{"line":144,"column":33},"end":{"line":144,"column":49}}},"10":{"name":"(anonymous_10)","line":161,"loc":{"start":{"line":161,"column":41},"end":{"line":161,"column":53}}},"11":{"name":"(anonymous_11)","line":170,"loc":{"start":{"line":170,"column":37},"end":{"line":170,"column":49}}},"12":{"name":"(anonymous_12)","line":180,"loc":{"start":{"line":180,"column":47},"end":{"line":180,"column":59}}},"13":{"name":"(anonymous_13)","line":194,"loc":{"start":{"line":194,"column":44},"end":{"line":194,"column":56}}},"14":{"name":"(anonymous_14)","line":220,"loc":{"start":{"line":220,"column":28},"end":{"line":220,"column":40}}},"15":{"name":"(anonymous_15)","line":229,"loc":{"start":{"line":229,"column":29},"end":{"line":229,"column":55}}},"16":{"name":"(anonymous_16)","line":246,"loc":{"start":{"line":246,"column":40},"end":{"line":246,"column":52}}},"17":{"name":"(anonymous_17)","line":262,"loc":{"start":{"line":262,"column":34},"end":{"line":262,"column":58}}},"18":{"name":"(anonymous_18)","line":273,"loc":{"start":{"line":273,"column":26},"end":{"line":273,"column":50}}},"19":{"name":"(anonymous_19)","line":274,"loc":{"start":{"line":274,"column":33},"end":{"line":274,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"4":{"start":{"line":12,"column":0},"end":{"line":21,"column":2}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":27}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":28}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":35}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":42}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":22}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"13":{"start":{"line":30,"column":0},"end":{"line":41,"column":2}},"14":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":37}},"16":{"start":{"line":33,"column":11},"end":{"line":39,"column":5}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":52}},"18":{"start":{"line":35,"column":11},"end":{"line":39,"column":5}},"19":{"start":{"line":36,"column":8},"end":{"line":36,"column":55}},"20":{"start":{"line":37,"column":11},"end":{"line":39,"column":5}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":54}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"23":{"start":{"line":47,"column":0},"end":{"line":64,"column":2}},"24":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"25":{"start":{"line":49,"column":8},"end":{"line":49,"column":42}},"26":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"27":{"start":{"line":52,"column":8},"end":{"line":52,"column":42}},"28":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"29":{"start":{"line":55,"column":8},"end":{"line":55,"column":40}},"30":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"31":{"start":{"line":58,"column":8},"end":{"line":58,"column":40}},"32":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"33":{"start":{"line":61,"column":8},"end":{"line":61,"column":72}},"34":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}},"35":{"start":{"line":70,"column":0},"end":{"line":76,"column":2}},"36":{"start":{"line":71,"column":4},"end":{"line":71,"column":26}},"37":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"38":{"start":{"line":73,"column":8},"end":{"line":73,"column":71}},"39":{"start":{"line":75,"column":4},"end":{"line":75,"column":34}},"40":{"start":{"line":82,"column":0},"end":{"line":90,"column":2}},"41":{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},"42":{"start":{"line":84,"column":8},"end":{"line":84,"column":45}},"43":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"44":{"start":{"line":86,"column":12},"end":{"line":86,"column":74}},"45":{"start":{"line":89,"column":4},"end":{"line":89,"column":58}},"46":{"start":{"line":96,"column":0},"end":{"line":115,"column":2}},"47":{"start":{"line":97,"column":4},"end":{"line":97,"column":27}},"48":{"start":{"line":98,"column":4},"end":{"line":98,"column":19}},"49":{"start":{"line":99,"column":4},"end":{"line":104,"column":5}},"50":{"start":{"line":100,"column":8},"end":{"line":100,"column":69}},"51":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"52":{"start":{"line":102,"column":12},"end":{"line":102,"column":40}},"53":{"start":{"line":105,"column":4},"end":{"line":112,"column":5}},"54":{"start":{"line":106,"column":8},"end":{"line":106,"column":62}},"55":{"start":{"line":107,"column":8},"end":{"line":110,"column":9}},"56":{"start":{"line":108,"column":12},"end":{"line":108,"column":82}},"57":{"start":{"line":109,"column":12},"end":{"line":109,"column":85}},"58":{"start":{"line":109,"column":56},"end":{"line":109,"column":85}},"59":{"start":{"line":111,"column":8},"end":{"line":111,"column":41}},"60":{"start":{"line":113,"column":4},"end":{"line":113,"column":29}},"61":{"start":{"line":114,"column":4},"end":{"line":114,"column":16}},"62":{"start":{"line":121,"column":0},"end":{"line":133,"column":2}},"63":{"start":{"line":122,"column":4},"end":{"line":122,"column":27}},"64":{"start":{"line":123,"column":4},"end":{"line":123,"column":95}},"65":{"start":{"line":124,"column":4},"end":{"line":131,"column":5}},"66":{"start":{"line":125,"column":8},"end":{"line":130,"column":9}},"67":{"start":{"line":126,"column":12},"end":{"line":129,"column":13}},"68":{"start":{"line":127,"column":16},"end":{"line":127,"column":45}},"69":{"start":{"line":128,"column":16},"end":{"line":128,"column":51}},"70":{"start":{"line":132,"column":4},"end":{"line":132,"column":16}},"71":{"start":{"line":140,"column":0},"end":{"line":155,"column":2}},"72":{"start":{"line":141,"column":4},"end":{"line":141,"column":27}},"73":{"start":{"line":142,"column":4},"end":{"line":142,"column":20}},"74":{"start":{"line":143,"column":4},"end":{"line":143,"column":44}},"75":{"start":{"line":143,"column":25},"end":{"line":143,"column":44}},"76":{"start":{"line":144,"column":4},"end":{"line":154,"column":32}},"77":{"start":{"line":145,"column":8},"end":{"line":153,"column":9}},"78":{"start":{"line":146,"column":12},"end":{"line":146,"column":21}},"79":{"start":{"line":147,"column":15},"end":{"line":153,"column":9}},"80":{"start":{"line":148,"column":12},"end":{"line":148,"column":22}},"81":{"start":{"line":149,"column":15},"end":{"line":153,"column":9}},"82":{"start":{"line":150,"column":12},"end":{"line":150,"column":21}},"83":{"start":{"line":152,"column":12},"end":{"line":152,"column":61}},"84":{"start":{"line":161,"column":0},"end":{"line":164,"column":2}},"85":{"start":{"line":162,"column":4},"end":{"line":162,"column":35}},"86":{"start":{"line":163,"column":4},"end":{"line":163,"column":41}},"87":{"start":{"line":170,"column":0},"end":{"line":178,"column":2}},"88":{"start":{"line":171,"column":4},"end":{"line":171,"column":16}},"89":{"start":{"line":172,"column":4},"end":{"line":176,"column":5}},"90":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"91":{"start":{"line":174,"column":12},"end":{"line":174,"column":47}},"92":{"start":{"line":177,"column":4},"end":{"line":177,"column":15}},"93":{"start":{"line":180,"column":0},"end":{"line":188,"column":2}},"94":{"start":{"line":181,"column":4},"end":{"line":181,"column":16}},"95":{"start":{"line":182,"column":4},"end":{"line":186,"column":5}},"96":{"start":{"line":183,"column":8},"end":{"line":185,"column":9}},"97":{"start":{"line":184,"column":12},"end":{"line":184,"column":57}},"98":{"start":{"line":187,"column":4},"end":{"line":187,"column":15}},"99":{"start":{"line":194,"column":0},"end":{"line":214,"column":2}},"100":{"start":{"line":195,"column":4},"end":{"line":195,"column":34}},"101":{"start":{"line":196,"column":4},"end":{"line":196,"column":35}},"102":{"start":{"line":197,"column":4},"end":{"line":212,"column":5}},"103":{"start":{"line":198,"column":8},"end":{"line":198,"column":41}},"104":{"start":{"line":199,"column":8},"end":{"line":211,"column":9}},"105":{"start":{"line":200,"column":12},"end":{"line":200,"column":45}},"106":{"start":{"line":201,"column":15},"end":{"line":211,"column":9}},"107":{"start":{"line":202,"column":12},"end":{"line":206,"column":13}},"108":{"start":{"line":203,"column":16},"end":{"line":203,"column":79}},"109":{"start":{"line":205,"column":16},"end":{"line":205,"column":79}},"110":{"start":{"line":208,"column":12},"end":{"line":208,"column":50}},"111":{"start":{"line":209,"column":12},"end":{"line":209,"column":79}},"112":{"start":{"line":210,"column":12},"end":{"line":210,"column":78}},"113":{"start":{"line":213,"column":4},"end":{"line":213,"column":16}},"114":{"start":{"line":220,"column":0},"end":{"line":222,"column":2}},"115":{"start":{"line":221,"column":4},"end":{"line":221,"column":73}},"116":{"start":{"line":229,"column":0},"end":{"line":240,"column":2}},"117":{"start":{"line":230,"column":4},"end":{"line":237,"column":5}},"118":{"start":{"line":231,"column":8},"end":{"line":231,"column":53}},"119":{"start":{"line":233,"column":8},"end":{"line":236,"column":9}},"120":{"start":{"line":234,"column":12},"end":{"line":234,"column":24}},"121":{"start":{"line":235,"column":12},"end":{"line":235,"column":54}},"122":{"start":{"line":238,"column":4},"end":{"line":238,"column":41}},"123":{"start":{"line":239,"column":4},"end":{"line":239,"column":16}},"124":{"start":{"line":246,"column":0},"end":{"line":255,"column":2}},"125":{"start":{"line":247,"column":4},"end":{"line":247,"column":94}},"126":{"start":{"line":248,"column":4},"end":{"line":253,"column":5}},"127":{"start":{"line":249,"column":8},"end":{"line":249,"column":45}},"128":{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},"129":{"start":{"line":251,"column":12},"end":{"line":251,"column":38}},"130":{"start":{"line":254,"column":4},"end":{"line":254,"column":16}},"131":{"start":{"line":262,"column":0},"end":{"line":265,"column":2}},"132":{"start":{"line":263,"column":4},"end":{"line":263,"column":43}},"133":{"start":{"line":264,"column":4},"end":{"line":264,"column":48}},"134":{"start":{"line":273,"column":0},"end":{"line":282,"column":2}},"135":{"start":{"line":274,"column":4},"end":{"line":281,"column":7}},"136":{"start":{"line":275,"column":8},"end":{"line":280,"column":9}},"137":{"start":{"line":276,"column":12},"end":{"line":276,"column":20}},"138":{"start":{"line":278,"column":12},"end":{"line":278,"column":55}},"139":{"start":{"line":279,"column":12},"end":{"line":279,"column":32}},"140":{"start":{"line":284,"column":0},"end":{"line":284,"column":32}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":11}},{"start":{"line":33,"column":11},"end":{"line":33,"column":11}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":11}},{"start":{"line":35,"column":11},"end":{"line":35,"column":11}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":11},"end":{"line":37,"column":11}},{"start":{"line":37,"column":11},"end":{"line":37,"column":11}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"9":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"10":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"12":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"13":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":39},"end":{"line":123,"column":87}},{"start":{"line":123,"column":90},"end":{"line":123,"column":94}}]},"14":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"15":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":18}},{"start":{"line":125,"column":22},"end":{"line":125,"column":63}}]},"16":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":12}},{"start":{"line":126,"column":12},"end":{"line":126,"column":12}}]},"17":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"18":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"19":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":30}},{"start":{"line":145,"column":34},"end":{"line":145,"column":52}}]},"20":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":15},"end":{"line":147,"column":15}},{"start":{"line":147,"column":15},"end":{"line":147,"column":15}}]},"21":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":15},"end":{"line":149,"column":15}},{"start":{"line":149,"column":15},"end":{"line":149,"column":15}}]},"22":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":8}},{"start":{"line":173,"column":8},"end":{"line":173,"column":8}}]},"23":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":183,"column":8}},{"start":{"line":183,"column":8},"end":{"line":183,"column":8}}]},"24":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":8}},{"start":{"line":199,"column":8},"end":{"line":199,"column":8}}]},"25":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":15},"end":{"line":201,"column":15}},{"start":{"line":201,"column":15},"end":{"line":201,"column":15}}]},"26":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":12}},{"start":{"line":202,"column":12},"end":{"line":202,"column":12}}]},"27":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":73},"end":{"line":203,"column":74}},{"start":{"line":203,"column":77},"end":{"line":203,"column":78}}]},"28":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":73},"end":{"line":205,"column":74}},{"start":{"line":205,"column":77},"end":{"line":205,"column":78}}]},"29":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":51},"end":{"line":209,"column":65}},{"start":{"line":209,"column":68},"end":{"line":209,"column":78}}]},"30":{"line":210,"type":"cond-expr","locations":[{"start":{"line":210,"column":63},"end":{"line":210,"column":64}},{"start":{"line":210,"column":67},"end":{"line":210,"column":77}}]},"31":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"32":{"line":247,"type":"cond-expr","locations":[{"start":{"line":247,"column":42},"end":{"line":247,"column":66}},{"start":{"line":247,"column":69},"end":{"line":247,"column":93}}]},"33":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":8},"end":{"line":250,"column":8}},{"start":{"line":250,"column":8},"end":{"line":250,"column":8}}]},"34":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":275,"column":8}},{"start":{"line":275,"column":8},"end":{"line":275,"column":8}}]}},"code":["var events = require('events');","var utils = require('./../infrastructure/utils');","var selectionStrategies = require('./selectionStrategies');","","/**"," * Genetic algorithm population"," * @constructor"," * @param {object} options - Population options"," * @param {Individual} options.baseIndividual -"," * @property {object} options - Population options"," */","var Population = function (options) {","","    this.options = options;","    this.individuals = null;","    this.validateRequiredOptions();","    this.setDefaultOptionsIfNotProvided();","    this.initialise();","    events.EventEmitter.call(this);","    return this;","};","","utils.inherits(Population, events.EventEmitter);","","/**"," * Throws an exception if a required option is missing"," * @throws An exception is thrown if a required option is missing"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.validateRequiredOptions = function () {","    if (!this.options) {","        throw \"options are required\";","    } else if (!this.options.baseIndividual) {","        throw \"option 'baseIndividual' is required\";","    } else if (!this.options.crossoverStrategy) {","        throw \"option 'crossoverStrategy' is required\";","    } else if (!this.options.fitnessFunction) {","        throw \"options 'fitnessFunction' is required\";","    }","    return this;","};","","/**"," * Sets default values for options that have not been defined"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.setDefaultOptionsIfNotProvided = function () {","    if (!this.options.populationSize) {","        this.options.populationSize = 100;","    }","    if (this.options.crossoverRate === undefined) {","        this.options.crossoverRate = 0.75;","    }","    if (this.options.mutationRate === undefined) {","        this.options.mutationRate = 0.2;","    }","    if (!this.options.tournamentSize) {","        this.options.tournamentSize = 2;","    }","    if (!this.options.selectionStrategy) {","        this.options.selectionStrategy = selectionStrategies.tournament;","    }","    return this;","};","","/**"," * Creates a randomly generated population of individuals"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.initialise = function () {","    this.individuals = [];","    for (var i = 0; i < this.options.populationSize; i++) {","        this.individuals.push(this.options.baseIndividual.createNew());","    }","    return this.evaluateFitness();","};","","/**"," * Calculates the fitness of each individual where the fitness value is null"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.evaluateFitness = function () {","    for (var i = 0; i < this.individuals.length; i++) {","        var individual = this.individuals[i];","        if (individual.fitness === null) {","            individual.fitness = this.options.fitnessFunction(individual);","        }","    }","    return this.filterNanFitness().setNormalisedFitness();","};","","/**"," * Performs crossover using the crossoverStrategy function defined in the population options"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.crossover = function () {","    this.evaluateFitness();","    var limbo = [];","    if (this.options.elitism) {","        var elite = this.getFittestIndividuals(this.options.elitism);","        for (var i = 0; i < elite.length; i++) {","            limbo.push(elite[i].copy());","        }","    }","    while (limbo.length < this.individuals.length) {","        var selections = this.options.selectionStrategy(this);","        if (utils.random() < this.options.crossoverRate) {","            selections = this.options.crossoverStrategy(selections, this.options);","            for (var i = 0; i < selections.length; i++) selections[i].fitness = null;","        }","        limbo = limbo.concat(selections);","    }","    this.individuals = limbo;","    return this;","};","","/**"," * Mutates the population based on the mutationRate property in the population options"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.mutate = function () {","    this.evaluateFitness();","    var elite = this.options.elitism ? this.getFittestIndividuals(this.options.elitism) : null;","    for (var i = 0; i < this.individuals.length; i++) {","        if (!elite || elite.indexOf(this.individuals[i]) === -1) {","            if (utils.random() < this.options.mutationRate) {","                this.individuals[i].mutate();","                this.individuals[i].fitness = null;","            }","        }","    }","    return this;","};","","/**"," * Returns a specified number of individuals with the best fitness rating in the population"," * @param {number} [numIndividuals=1] - The number of individuals to return"," * @returns {Individual[]} An array of the fittest individuals in the population"," */","Population.prototype.getFittestIndividuals = function (numIndividuals) {","    this.evaluateFitness();","    var self = this;","    if (!numIndividuals) numIndividuals = 1;","    return this.individuals.sort(function (a, b) {","        if (a.fitness === null && b.fitness === null) {","            return 0;","        } else if (a.fitness === null) {","            return -1;","        } else if (b.fitness === null) {","            return 1;","        } else {","            return b.normalisedFitness - a.normalisedFitness;","        }","    }).slice(0, numIndividuals);","};","","/**"," * Calculate the average fitness of all individuals in the population (exluding infinite values)"," * @returns {number} Average fitness of the population"," */","Population.prototype.getAverageFitness = function () {","    var sum = this.getSumFitness();","    return sum / this.individuals.length;","};","","/**"," * Calculate the sum of all individual fitness values"," * @returns {number} Sum of all individual fitness values"," */","Population.prototype.getSumFitness = function () {","    var sum = 0;","    for (var i = 0; i < this.individuals.length; i++) {","        if (isFinite(this.individuals[i].fitness)) {","            sum += this.individuals[i].fitness;","        }","    }","    return sum;","};","","Population.prototype.getSumNormalisedFitness = function () {","    var sum = 0;","    for (var i = 0; i < this.individuals.length; i++) {","        if (isFinite(this.individuals[i].normalisedFitness)) {","            sum += this.individuals[i].normalisedFitness;","        }","    }","    return sum;","};","","/**"," * Sets the normalised fitness for each individual in the population"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.setNormalisedFitness = function () {","    var i, individual, normalised;","    var sum = this.getSumFitness();","    for (i = 0; i < this.individuals.length; i++) {","        individual = this.individuals[i];","        if (isNaN(individual.fitness)) {","            individual.normalisedFitness = 0;","        } else if (!isFinite(individual.fitness)) {","            if (individual.fitness > 0) {","                individual.normalisedFitness = this.options.isMinimise ? 0 : 1;","            } else {","                individual.normalisedFitness = this.options.isMinimise ? 1 : 0;","            }","        } else {","            normalised = individual.fitness / sum;","            normalised = this.options.isMinimise ? 1 - normalised : normalised;","            individual.normalisedFitness = isNaN(normalised) ? 0 : normalised;","        }","    }","    return this;","};","","/**"," * Applies a single iteration of selection, crossover and mutation to the population"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.step = function () {","    return this.evaluateFitness().crossover().mutate().evaluateFitness();","};","","/**"," * Trains the population over a specified number of generations"," * @param {number} numGenerations - The number of generations to train the population over"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.train = function (numGenerations) {","    if (numGenerations <= 0) {","        throw \"'numGenerations' must greater than 0\";","    } else {","        for (var i = 0; i < numGenerations; i++) {","            this.step();","            this.emit('generationCompleted', this, i);","        }","    }","    this.emit('trainingCompleted', this);","    return this;","};","","/**"," * Subsitutes an individuals fitness to positive or negative infinity if it isNaN"," * @returns {Population} Reference to current object for chaining"," */","Population.prototype.filterNanFitness = function () {","    var value = this.options.isMinimise ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;","    for (var i = 0; i < this.individuals.length; i++) {","        var individual = this.individuals[i];","        if (isNaN(individual.fitness)) {","            individual.fitness = value","        }","    }","    return this;","};","","/**"," * Save the population to a file"," * @param {string} filePath - Path to file"," * @callback {writeToFileCallback} cb - Callback handler"," */","Population.prototype.saveToFile = function (filePath, cb) {","    var serialised = utils.serialise(this);","    utils.writeToFile(filePath, serialised, cb);","};","","/**"," * Load a population from a file"," * @static"," * @param {string} filePath - Path to file"," * @callback {loadFromFileCallback} cb - Callback handler"," */","Population.loadFromFile = function (filePath, cb) {","    utils.readFromFile(filePath, function (err, data) {","        if (err) {","            cb(err);","        } else {","            var deserialised = utils.deserialise(data);","            return deserialised;","        }","    });","};","","exports.Population = Population;"],"l":{"1":1,"2":1,"3":1,"12":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"23":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"47":1,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"63":0,"70":1,"71":0,"72":0,"73":0,"75":0,"82":1,"83":0,"84":0,"85":0,"86":0,"89":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"105":0,"106":0,"107":0,"108":0,"109":0,"111":0,"113":0,"114":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"132":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"161":1,"162":0,"163":0,"170":1,"171":0,"172":0,"173":0,"174":0,"177":0,"180":1,"181":0,"182":0,"183":0,"184":0,"187":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"205":0,"208":0,"209":0,"210":0,"213":0,"220":1,"221":0,"229":1,"230":0,"231":0,"233":0,"234":0,"235":0,"238":0,"239":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"254":0,"262":1,"263":0,"264":0,"273":1,"274":0,"275":0,"276":0,"278":0,"279":0,"284":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/infrastructure/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/infrastructure/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":5,"29":1,"30":0,"31":1,"32":0,"33":1,"34":0,"35":1,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":5,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":42}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":29}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":23},"end":{"line":29,"column":39}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":18},"end":{"line":39,"column":34}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":37}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":23},"end":{"line":65,"column":55}}},"7":{"name":"(anonymous_7)","line":66,"loc":{"start":{"line":66,"column":41},"end":{"line":66,"column":66}}},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":19},"end":{"line":74,"column":60}}},"9":{"name":"(anonymous_9)","line":82,"loc":{"start":{"line":82,"column":20},"end":{"line":82,"column":35}}},"10":{"name":"(anonymous_10)","line":90,"loc":{"start":{"line":90,"column":22},"end":{"line":90,"column":37}}},"11":{"name":"(anonymous_11)","line":100,"loc":{"start":{"line":100,"column":22},"end":{"line":100,"column":52}}},"12":{"name":"(anonymous_12)","line":109,"loc":{"start":{"line":109,"column":23},"end":{"line":109,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"4":{"start":{"line":11,"column":0},"end":{"line":14,"column":2}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":64}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":39}},"7":{"start":{"line":20,"column":0},"end":{"line":22,"column":2}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":25}},"9":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":53}},"11":{"start":{"line":39,"column":0},"end":{"line":41,"column":2}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":30}},"13":{"start":{"line":49,"column":0},"end":{"line":57,"column":2}},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":29}},"15":{"start":{"line":50,"column":17},"end":{"line":50,"column":29}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":45}},"17":{"start":{"line":51,"column":32},"end":{"line":51,"column":45}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":43}},"19":{"start":{"line":52,"column":30},"end":{"line":52,"column":43}},"20":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"21":{"start":{"line":54,"column":8},"end":{"line":54,"column":40}},"22":{"start":{"line":54,"column":27},"end":{"line":54,"column":40}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":16}},"24":{"start":{"line":65,"column":0},"end":{"line":69,"column":2}},"25":{"start":{"line":66,"column":4},"end":{"line":68,"column":7}},"26":{"start":{"line":67,"column":8},"end":{"line":67,"column":83}},"27":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"28":{"start":{"line":75,"column":4},"end":{"line":75,"column":49}},"29":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"30":{"start":{"line":83,"column":4},"end":{"line":83,"column":36}},"31":{"start":{"line":90,"column":0},"end":{"line":92,"column":2}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":38}},"33":{"start":{"line":100,"column":0},"end":{"line":102,"column":2}},"34":{"start":{"line":101,"column":4},"end":{"line":101,"column":37}},"35":{"start":{"line":109,"column":0},"end":{"line":111,"column":2}},"36":{"start":{"line":110,"column":4},"end":{"line":110,"column":38}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":32}},{"start":{"line":13,"column":35},"end":{"line":13,"column":38}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":17}},{"start":{"line":51,"column":21},"end":{"line":51,"column":30}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"7":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":57},"end":{"line":67,"column":74}},{"start":{"line":67,"column":77},"end":{"line":67,"column":82}}]}},"code":["var fs = require('fs');","var util = require('util');","var serialize = require('node-serialize');","","/**"," * Returns a random whole number between a specified range"," * @param {number} min - Minimum value (inclusive)"," * @param {number} max - Maximum value (exclusive)"," * @returns A random whole number between a specified range"," */","exports.randBetween = function (min, max) {","    var val = Math.floor(Math.random() * (max - min + 1) + min);","    return val === max ? val - 1 : val;","};","","/**"," * Returns a random number between 0 and 1"," * @returns A random number between 0 and 1"," */","exports.random = function () {","    return Math.random();","};","","/**"," * Returns a randomly selected element from an array"," * @param {array} from - An array to select an element from"," * @returns A randomly selected element from the provided array"," */","exports.selectRandom = function (from) {","    return from[exports.randBetween(0, from.length)];","};","","/**"," * Performs floating point comparison between two numbers with an epsilon of 0.00001"," * @param {number} a - The first number to compare"," * @param {number} b - The second number to compare"," * @returns {boolean} True if the provided numbers are equal, otherwise false"," */","exports.fpEqual = function (a, b) {","    return (a - b) <= 0.00001;","};","","/**"," * Compares two arrays by each element"," * @param {array} a - The first array to compare"," * @param {array} b - The second array to compare"," * @returns {boolean} True if the provided arrays are equal, otherwise false"," */","exports.arrayEqual = function (a, b) {","    if (a === b) return true;","    if (a == null || b == null) return false;","    if (a.length != b.length) return false;","    for (var i = 0; i < a.length; ++i) {","        if (a[i] !== b[i]) return false;","    }","    return true;","};","","/**"," * Replaces each tag in the provided string with its corresponding parameter element"," * @param {string} stringVar - String to convert"," * @param {array} argsArray - An array of arguments"," * @returns {string} Converted string"," */","exports.formatString = function (stringVar, argsArray) {","    return stringVar.replace(/{(\\d+)}/g, function (match, number) {","        return typeof argsArray[number] != 'undefined' ? argsArray[number] : match;","    });","};","","/**"," * Calls node util.inherits function"," */","exports.inherits = function (constructor, superConstructor) {","    util.inherits(constructor, superConstructor);","};","","/**"," * Serialises object to string"," * @param {object} obj - Object to serialize"," */","exports.serialise = function (obj) {","    return serialize.serialize(obj);","};","","/**"," * Deserialises string to object"," * @param {object} str - String to deserialise"," */","exports.deserialise = function (str) {","    return serialize.unserialize(str);","};","","/**"," * Writes string to a file"," * @param {string} filePath - Path to file"," * @param {string} data - Data to be written to file"," * @param {writeToFileCallback} cb - Callback handler"," */","exports.writeToFile = function (filePath, data, cb) {","    fs.writeFile(filePath, data, cb);","};","","/**"," * Reads string from a file"," * @param {string} filePath - Path to file"," * @param {readFromFileCallback} cb - Callback handler"," */","exports.readFromFile = function (filePath, cb) {","    fs.readFile(filePath, 'utf8', cb);","};"],"l":{"1":1,"2":1,"3":1,"11":1,"12":0,"13":0,"20":1,"21":0,"29":1,"30":0,"39":1,"40":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"65":1,"66":0,"67":0,"74":1,"75":5,"82":1,"83":0,"90":1,"91":0,"100":1,"101":0,"109":1,"110":0}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/selectionStrategies.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/selectionStrategies.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":39}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":37}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":50},"end":{"line":32,"column":66}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":21},"end":{"line":54,"column":43}}},"5":{"name":"(anonymous_5)","line":76,"loc":{"start":{"line":76,"column":24},"end":{"line":76,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":8,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":45}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":77}},"5":{"start":{"line":11,"column":4},"end":{"line":17,"column":5}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":75}},"7":{"start":{"line":13,"column":8},"end":{"line":16,"column":9}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":36}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":18}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":22}},"11":{"start":{"line":25,"column":0},"end":{"line":48,"column":2}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":27}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":27}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":31}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":55}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":58}},"18":{"start":{"line":32,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":57}},"20":{"start":{"line":35,"column":4},"end":{"line":46,"column":5}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":40}},"22":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"23":{"start":{"line":38,"column":12},"end":{"line":38,"column":40}},"24":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":40}},"26":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"27":{"start":{"line":44,"column":12},"end":{"line":44,"column":18}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":36}},"29":{"start":{"line":54,"column":0},"end":{"line":70,"column":2}},"30":{"start":{"line":55,"column":4},"end":{"line":55,"column":24}},"31":{"start":{"line":56,"column":4},"end":{"line":56,"column":45}},"32":{"start":{"line":57,"column":4},"end":{"line":68,"column":5}},"33":{"start":{"line":58,"column":8},"end":{"line":58,"column":28}},"34":{"start":{"line":59,"column":8},"end":{"line":62,"column":9}},"35":{"start":{"line":60,"column":12},"end":{"line":60,"column":71}},"36":{"start":{"line":61,"column":12},"end":{"line":61,"column":39}},"37":{"start":{"line":63,"column":8},"end":{"line":63,"column":35}},"38":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"39":{"start":{"line":65,"column":12},"end":{"line":65,"column":99}},"40":{"start":{"line":65,"column":76},"end":{"line":65,"column":99}},"41":{"start":{"line":67,"column":8},"end":{"line":67,"column":32}},"42":{"start":{"line":69,"column":4},"end":{"line":69,"column":22}},"43":{"start":{"line":76,"column":0},"end":{"line":97,"column":2}},"44":{"start":{"line":77,"column":4},"end":{"line":77,"column":24}},"45":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"46":{"start":{"line":79,"column":4},"end":{"line":79,"column":27}},"47":{"start":{"line":80,"column":4},"end":{"line":80,"column":25}},"48":{"start":{"line":81,"column":4},"end":{"line":81,"column":31}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":51}},"50":{"start":{"line":83,"column":4},"end":{"line":95,"column":5}},"51":{"start":{"line":84,"column":8},"end":{"line":84,"column":51}},"52":{"start":{"line":85,"column":8},"end":{"line":85,"column":59}},"53":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"54":{"start":{"line":87,"column":12},"end":{"line":87,"column":36}},"55":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"56":{"start":{"line":90,"column":12},"end":{"line":90,"column":36}},"57":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"58":{"start":{"line":93,"column":12},"end":{"line":93,"column":18}},"59":{"start":{"line":96,"column":4},"end":{"line":96,"column":36}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"3":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":29}},{"start":{"line":37,"column":33},"end":{"line":37,"column":44}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":29}},{"start":{"line":40,"column":33},"end":{"line":40,"column":44}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"7":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":22}},{"start":{"line":43,"column":26},"end":{"line":43,"column":36}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"10":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":28}},{"start":{"line":86,"column":32},"end":{"line":86,"column":43}}]},"11":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":8}},{"start":{"line":89,"column":8},"end":{"line":89,"column":8}}]},"12":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":29}},{"start":{"line":89,"column":33},"end":{"line":89,"column":44}}]},"13":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"14":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":22}},{"start":{"line":92,"column":26},"end":{"line":92,"column":36}}]}},"code":["var utils = require('./../infrastructure/utils');","","/**"," * Returns two randomly selected individuals"," * @param {Individual[]} individuals - An array of individuals"," * @param {object} options - Population options"," */","exports.random = function (population) {","    var individuals = population.individuals;","    var selections = [individuals[utils.randBetween(0, individuals.length)]];","    while (true) {","        var spouse = individuals[utils.randBetween(0, individuals.length)];","        if (spouse !== selections[0]) {","            selections.push(spouse);","            break;","        }","    }","    return selections;","};","","/**"," * Returns two individuals using the rank selection algorithm"," * @param {Population} population - A population instance"," */","exports.rank = function (population) {","    var a = utils.random();","    var b = utils.random();","    var selectionA, selectionB;","    var runningTotal = 0;","    var numIndividuals = population.individuals.length;","    var sum = (numIndividuals * (numIndividuals + 1)) / 2;","    var individuals = population.individuals.sort(function (a, b) {","        return a.normalisedFitness - b.normalisedFitness;","    });","    for (var i = individuals.length - 1; i >= 0; i--) {","        runningTotal += ((i + 1) / sum);","        if (runningTotal >= a && !selectionA) {","            selectionA = individuals[i];","        }","        if (runningTotal >= b && !selectionB) {","            selectionB = individuals[i];","        }","        if (selectionA && selectionB) {","            break;","        }","    }","    return [selectionA, selectionB];","};","","/**"," * Returns two individuals using the tournament selection algorithm"," * @param {Population} population - A population instance"," */","exports.tournament = function (population) {","    var selections = [];","    var individuals = population.individuals;","    for (var i = 0; i < 2; i++) {","        var tournament = [];","        for (var j = 0; j < population.options.tournamentSize; j++) {","            var selection = utils.selectRandom(population.individuals);","            tournament.push(selection);","        }","        var winner = tournament[0];","        for (var j = 1; j < tournament.length; j++) {","            if (tournament[j].normalisedFitness > winner.normalisedFitness) winner = tournament[j];","        }","        selections.push(winner);","    }","    return selections;","};","","/**"," * Returns two individuals using the roulette wheel selection algorithm"," * @param {Population} population - A population instance"," */","exports.rouletteWheel = function (population) {","    var selections = [];","    var a = utils.random();","    var b = utils.random();","    var runningTotal = 0;","    var selectionA, selectionB;","    var sum = population.getSumNormalisedFitness();","    for (var i = 0; i < population.individuals.length; i++) {","        var individual = population.individuals[i];","        runningTotal += individual.normalisedFitness / sum;","        if (runningTotal > a && !selectionA) {","            selectionA = individual;","        }","        if (runningTotal >= b && !selectionB) {","            selectionB = individual;","        }","        if (selectionA && selectionB) {","            break;","        }","    }","    return [selectionA, selectionB];","};"],"l":{"1":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"18":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0,"47":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"67":0,"69":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"92":0,"93":0,"96":0}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/steadyStatePopulation.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/steadyStatePopulation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":28},"end":{"line":5,"column":47}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":39},"end":{"line":11,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"7":{"start":{"line":11,"column":0},"end":{"line":24,"column":2}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":58}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":64}},"11":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"12":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":35}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":84}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":84}},"16":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"17":{"start":{"line":26,"column":0},"end":{"line":26,"column":54}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]}},"code":["var utils = require('./../infrastructure/utils');","var selectionStrategies = require('./selectionStrategies');","var Population = require('./population').Population;","","var SteadyStatePopulation = function (options) {","    Population.call(this, options);","};","","utils.inherits(SteadyStatePopulation, Population);","","SteadyStatePopulation.prototype.step = function () {","    var selections = this.options.selectionStrategy(this);","    if (utils.random() < this.options.crossoverRate) {","        selections = this.options.crossoverStrategy(selections);","    }","    for (var i = 0; i < 2; i++) {","        if (utils.random() < this.options.mutationRate) {","            selections[i].mutate();","        }","    }","    this.individuals[utils.randBetween(0, this.individuals.length)] = selections[0];","    this.individuals[utils.randBetween(0, this.individuals.length)] = selections[1];","    return this;","};","","exports.SteadyStatePopulation = SteadyStatePopulation;"],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"9":1,"11":1,"12":0,"13":0,"14":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/individual.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/individual.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":1,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":36}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":47},"end":{"line":30,"column":59}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":34},"end":{"line":47,"column":46}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":28},"end":{"line":60,"column":40}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":33},"end":{"line":68,"column":45}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":30},"end":{"line":78,"column":42}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":37},"end":{"line":88,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":15,"column":0},"end":{"line":23,"column":2}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":34}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":27}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":35}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":16}},"11":{"start":{"line":30,"column":0},"end":{"line":41,"column":2}},"12":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"13":{"start":{"line":32,"column":8},"end":{"line":32,"column":37}},"14":{"start":{"line":33,"column":11},"end":{"line":39,"column":5}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":47}},"16":{"start":{"line":35,"column":11},"end":{"line":39,"column":5}},"17":{"start":{"line":36,"column":8},"end":{"line":36,"column":47}},"18":{"start":{"line":37,"column":11},"end":{"line":39,"column":5}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},"20":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"21":{"start":{"line":47,"column":0},"end":{"line":54,"column":2}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":87}},"23":{"start":{"line":49,"column":4},"end":{"line":49,"column":19}},"24":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"25":{"start":{"line":51,"column":8},"end":{"line":51,"column":55}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":16}},"27":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"28":{"start":{"line":61,"column":4},"end":{"line":61,"column":23}},"29":{"start":{"line":68,"column":0},"end":{"line":72,"column":2}},"30":{"start":{"line":69,"column":4},"end":{"line":69,"column":36}},"31":{"start":{"line":70,"column":4},"end":{"line":70,"column":31}},"32":{"start":{"line":71,"column":4},"end":{"line":71,"column":25}},"33":{"start":{"line":78,"column":0},"end":{"line":82,"column":2}},"34":{"start":{"line":79,"column":4},"end":{"line":79,"column":87}},"35":{"start":{"line":80,"column":4},"end":{"line":80,"column":24}},"36":{"start":{"line":81,"column":4},"end":{"line":81,"column":16}},"37":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"38":{"start":{"line":89,"column":4},"end":{"line":89,"column":61}},"39":{"start":{"line":92,"column":0},"end":{"line":92,"column":32}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":11}},{"start":{"line":33,"column":11},"end":{"line":33,"column":11}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":11}},{"start":{"line":35,"column":11},"end":{"line":35,"column":11}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":11},"end":{"line":37,"column":11}},{"start":{"line":37,"column":11},"end":{"line":37,"column":11}}]}},"code":["var utils = require('./../infrastructure/utils');","var clone = require('clone');","","/**"," * Genetic algorithm individual"," * @constructor"," * @param {object} options - Individual options"," * @param {number} options.minLength - The minimum number of genes"," * @param {number} options.maxLength - The maximum number of genes"," * @param {function} options.geneFactory - A function that returns a random gene"," * @property {object[]} body - An array of genes that represent a single chromosome"," * @property {number} fitness - The individuals fitness rating"," * @property {object} options - Individual options"," */","var Individual = function (options) {","    this.body = null;","    this.fitness = null;","    this.normalisedFitness = null;","    this.options = options;","    this.validateRequiredOptions();","    this.initialise();","    return this;","};","","/**"," * Validates the individuals current options"," * @throws An exception will occur if a required option is missing"," * @returns {Individual} Reference to current object for chaining"," */","Individual.prototype.validateRequiredOptions = function () {","    if (!this.options) {","        throw \"options are required\";","    } else if (this.options.minLength === undefined) {","        throw \"option 'minLength' is required\";","    } else if (this.options.maxLength === undefined) {","        throw \"option 'maxLength' is required\";","    } else if (!this.options.geneFactory) {","        throw \"option 'geneFactory' is required\";","    }","    return this;","};","","/**"," * Re creates the individuals body with randomly generated genes"," * @returns {Individual} Reference to current object for chaining"," */","Individual.prototype.initialise = function () {","    var length = utils.randBetween(this.options.minLength, this.options.maxLength + 1);","    this.body = [];","    for (var i = 0; i < length; i++) {","        this.body.push(this.options.geneFactory(this));","    }","    return this;","};","","/**"," * Creates a deep copy of the individual"," * @returns {Individual} A copy of the Individual instance"," */","Individual.prototype.copy = function () {","    return clone(this);","};","","/**"," * Creates a deep copy of the individual and then re initialises"," * @returns {Individual} A new individual based on the current individual"," */","Individual.prototype.createNew = function () {","    var newIndividual = this.copy();","    newIndividual.initialise();","    return newIndividual;","};","","/**"," * Mutates the individual by swapping a single gene with a randomly created gene"," * @returns {Individual} Reference to current object for chaining"," */","Individual.prototype.mutate = function () {","    this.body[utils.randBetween(0, this.body.length)] = this.options.geneFactory(this);","    this.fitness = null;","    return this;","};","","/**"," * Determine whether the individual body length is fixed (i.e. minLength === maxLength)"," * @returns {boolean} A true value if the indiviuals body is of fixed length"," */","Individual.prototype.isFixedLength = function () {","    return this.options.minLength === this.options.maxLength;","};","","exports.Individual = Individual;"],"l":{"1":1,"2":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"47":1,"48":0,"49":0,"50":0,"51":0,"53":0,"60":1,"61":0,"68":1,"69":0,"70":0,"71":0,"78":1,"79":0,"80":0,"81":0,"88":1,"89":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/crossoverStrategies.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/crossoverStrategies.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":28},"end":{"line":8,"column":51}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":26},"end":{"line":19,"column":49}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":57}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":41}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":19},"end":{"line":62,"column":42}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":19},"end":{"line":91,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":71}},"5":{"start":{"line":19,"column":0},"end":{"line":24,"column":2}},"6":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":88}},"8":{"start":{"line":32,"column":0},"end":{"line":36,"column":2}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":38}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":52}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":34}},"12":{"start":{"line":44,"column":0},"end":{"line":55,"column":2}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":39}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":37}},"15":{"start":{"line":47,"column":4},"end":{"line":47,"column":43}},"16":{"start":{"line":48,"column":4},"end":{"line":48,"column":43}},"17":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"18":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"19":{"start":{"line":51,"column":12},"end":{"line":51,"column":49}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":36}},"21":{"start":{"line":62,"column":0},"end":{"line":84,"column":2}},"22":{"start":{"line":63,"column":4},"end":{"line":63,"column":39}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":43}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":43}},"25":{"start":{"line":66,"column":4},"end":{"line":66,"column":49}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":23}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":62}},"28":{"start":{"line":69,"column":4},"end":{"line":79,"column":5}},"29":{"start":{"line":70,"column":8},"end":{"line":70,"column":62}},"30":{"start":{"line":71,"column":8},"end":{"line":71,"column":62}},"31":{"start":{"line":72,"column":8},"end":{"line":78,"column":9}},"32":{"start":{"line":74,"column":12},"end":{"line":77,"column":15}},"33":{"start":{"line":80,"column":4},"end":{"line":80,"column":41}},"34":{"start":{"line":81,"column":4},"end":{"line":81,"column":101}},"35":{"start":{"line":82,"column":4},"end":{"line":82,"column":101}},"36":{"start":{"line":83,"column":4},"end":{"line":83,"column":36}},"37":{"start":{"line":91,"column":0},"end":{"line":124,"column":2}},"38":{"start":{"line":92,"column":4},"end":{"line":92,"column":39}},"39":{"start":{"line":93,"column":4},"end":{"line":93,"column":43}},"40":{"start":{"line":94,"column":4},"end":{"line":94,"column":43}},"41":{"start":{"line":95,"column":4},"end":{"line":95,"column":49}},"42":{"start":{"line":96,"column":4},"end":{"line":96,"column":23}},"43":{"start":{"line":97,"column":4},"end":{"line":97,"column":66}},"44":{"start":{"line":98,"column":4},"end":{"line":98,"column":71}},"45":{"start":{"line":99,"column":4},"end":{"line":115,"column":5}},"46":{"start":{"line":100,"column":8},"end":{"line":114,"column":9}},"47":{"start":{"line":101,"column":12},"end":{"line":101,"column":86}},"48":{"start":{"line":102,"column":12},"end":{"line":102,"column":86}},"49":{"start":{"line":103,"column":12},"end":{"line":113,"column":13}},"50":{"start":{"line":107,"column":16},"end":{"line":112,"column":19}},"51":{"start":{"line":116,"column":4},"end":{"line":116,"column":41}},"52":{"start":{"line":117,"column":4},"end":{"line":117,"column":59}},"53":{"start":{"line":118,"column":4},"end":{"line":118,"column":59}},"54":{"start":{"line":119,"column":4},"end":{"line":119,"column":92}},"55":{"start":{"line":120,"column":4},"end":{"line":120,"column":92}},"56":{"start":{"line":121,"column":4},"end":{"line":121,"column":84}},"57":{"start":{"line":122,"column":4},"end":{"line":122,"column":84}},"58":{"start":{"line":123,"column":4},"end":{"line":123,"column":36}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":38}},{"start":{"line":9,"column":42},"end":{"line":9,"column":72}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":75}},{"start":{"line":21,"column":9},"end":{"line":21,"column":66}}]},"5":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":40}},{"start":{"line":20,"column":44},"end":{"line":20,"column":74}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"8":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":52}},{"start":{"line":72,"column":56},"end":{"line":72,"column":96}},{"start":{"line":73,"column":12},"end":{"line":73,"column":52}},{"start":{"line":73,"column":56},"end":{"line":73,"column":96}}]},"9":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]},"10":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":56}},{"start":{"line":104,"column":16},"end":{"line":104,"column":56}},{"start":{"line":105,"column":16},"end":{"line":105,"column":56}},{"start":{"line":106,"column":16},"end":{"line":106,"column":56}}]}},"code":["var utils = require('./../infrastructure/utils');","","/**"," * Throws an exception if any individuals have less than two genes"," * @param {Individual[]} individuals - An array of individuals to validate"," * @throws An exception is thrown if any individuals have less than two genes"," */","var validateMinimumLength = function (individuals) {","    if (individuals[0].body.length < 2 || individuals[0].body.length < 2) {","        throw \"individuals must have at least two genes for crossover\";","    }","};","","/**"," * Throws an exception if any individuals are not fixed length or of different lengths"," * @param {Individual[]} individuals - An array of individuals to validate"," * @throws An exception is thrown if any individuals are not fixed length"," */","var validateFixedLength = function (individuals) {","    if (!(individuals[0].isFixedLength() && individuals[1].isFixedLength()) ||","        (individuals[0].body.length !== individuals[1].body.length)) {","        throw \"individuals must be of a fixed length and equal in length for crossover\";","    }","};","","/**"," * Swaps genes between two individuals at the specified index"," * @param {Individual} indvidualA - The first individual"," * @param {Individual} indvidualB - The second individual"," * @param {number} index - Body array index to swap genes at"," */","var swapGenes = function (indvidualA, indvidualB, index) {","    var temp = indvidualA.body[index];","    indvidualA.body[index] = indvidualB.body[index];","    indvidualB.body[index] = temp;","};","","","/**"," * Performs uniform crossover"," * @param {Individual[]} individuals - An array containing two individuals"," * @returns {Individual[]} An array containing two offspring"," */","exports.uniform = function (individuals) {","    validateMinimumLength(individuals);","    validateFixedLength(individuals);","    var offspringA = individuals[0].copy();","    var offspringB = individuals[1].copy();","    for (var i = 0; i < offspringA.body.length; i++) {","        if (utils.random() < 0.5) {","            swapGenes(offspringA, offspringB, i);","        }","    }","    return [offspringA, offspringB];","};","","/**"," * Performs one point crossover"," * @param {Individual[]} individuals - An array containing two individuals"," * @returns {Individual[]} An array containing two offspring"," */","exports.onePoint = function (individuals) {","    validateMinimumLength(individuals);","    var offspringA = individuals[0].copy();","    var offspringB = individuals[1].copy();","    var indexA, indexB, newSizeA, newSizeB, cuts;","    var validCuts = [];","    var indexA = utils.randBetween(0, offspringA.body.length);","    for (indexB = 0; indexB < offspringB.body.length; indexB++) {","        newSizeA = indexA + (offspringB.body.length - indexB);","        newSizeB = indexB + (offspringA.body.length - indexA);","        if (newSizeA >= offspringA.options.minLength && newSizeA <= offspringA.options.maxLength &&","            newSizeB >= offspringB.options.minLength && newSizeB <= offspringB.options.maxLength) {","            validCuts.push({","                a: indexA,","                b: indexB","            });","        }","    }","    cuts = utils.selectRandom(validCuts);","    offspringA.body = individuals[0].body.slice(0, cuts.a).concat(individuals[1].body.slice(cuts.b));","    offspringB.body = individuals[1].body.slice(0, cuts.b).concat(individuals[0].body.slice(cuts.a));","    return [offspringA, offspringB];","};","","/**"," * Performs two point crossover"," * @param {Individual[]} individuals - An array containing two individuals"," * @returns {Individual[]} An array containing two offspring"," */","exports.twoPoint = function (individuals) {","    validateMinimumLength(individuals);","    var offspringA = individuals[0].copy();","    var offspringB = individuals[1].copy();","    var indexC, indexD, cuts, newSizeA, newSizeB;","    var validCuts = [];","    var indexA = utils.randBetween(0, offspringA.body.length - 1);","    var indexB = utils.randBetween(indexA + 1, offspringA.body.length);","    for (indexC = 0; indexC < offspringB.body.length; indexC++) {","        for (indexD = indexC + 1; indexD < offspringB.body.length; indexD++) {","            newSizeA = offspringA.body.length - (indexB - indexA) + (indexD - indexC);","            newSizeB = offspringB.body.length - (indexD - indexC) + (indexB - indexA);","            if (newSizeA <= offspringA.options.maxLength &&","                newSizeA >= offspringA.options.minLength &&","                newSizeB <= offspringB.options.maxLength &&","                newSizeB >= offspringB.options.minLength) {","                validCuts.push({","                    a: indexA,","                    b: indexB,","                    c: indexC,","                    d: indexD","                });","            }","        }","    }","    cuts = utils.selectRandom(validCuts);","    offspringA.body = individuals[0].body.slice(0, cuts.a);","    offspringB.body = individuals[1].body.slice(0, cuts.c);","    offspringA.body = offspringA.body.concat(individuals[1].body.slice(cuts.c, cuts.d + 1));","    offspringB.body = offspringB.body.concat(individuals[0].body.slice(cuts.a, cuts.b + 1));","    offspringA.body = offspringA.body.concat(individuals[0].body.slice(cuts.b + 1));","    offspringB.body = offspringB.body.concat(individuals[1].body.slice(cuts.d + 1));","    return [offspringA, offspringB];","};"],"l":{"1":1,"8":1,"9":0,"10":0,"19":1,"20":0,"22":0,"32":1,"33":0,"34":0,"35":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"54":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"74":0,"80":0,"81":0,"82":0,"83":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"107":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/geneFactories.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/geneFactories.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":23},"end":{"line":9,"column":35}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":23},"end":{"line":17,"column":35}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":23},"end":{"line":25,"column":35}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":31}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":21},"end":{"line":43,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":83}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":92}},"4":{"start":{"line":9,"column":0},"end":{"line":11,"column":2}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"6":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":40}},"8":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":44}},"10":{"start":{"line":33,"column":0},"end":{"line":36,"column":2}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":84}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":57}},"13":{"start":{"line":43,"column":0},"end":{"line":54,"column":2}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":37}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":84}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":74}},"17":{"start":{"line":47,"column":4},"end":{"line":53,"column":5}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":58}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":65}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":61}},"21":{"start":{"line":52,"column":8},"end":{"line":52,"column":68}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":34},"end":{"line":18,"column":35}},{"start":{"line":18,"column":38},"end":{"line":18,"column":39}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":34},"end":{"line":26,"column":37}},{"start":{"line":26,"column":40},"end":{"line":26,"column":43}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]}},"code":["var utils = require('./../infrastructure/utils');","var LinearFunctionNode = require('./linear/linearFunctionNode').LinearFunctionNode;","var LinearConditionalNode = require('./linear/linearConditionalNode').LinearConditionalNode;","","/**"," * Returns a random number between 0 and 1"," * @returns {number} A random number between 0 and 1"," */","exports.randomNumber = function () {","    return utils.random();","};","","/**"," * Returns a random binary number"," * @returns {number} A random binary number"," */","exports.binaryNumber = function () {","    return utils.random() < 0.5 ? 0 : 1;","};","","/**"," * Returns a random binary string"," * @returns {number} A random binary string"," */","exports.binaryString = function () {","    return utils.random() < 0.5 ? '0' : '1';","};","","/**"," * Returns a random letter in the alphabet, including uppercase characters and whitespace"," * @returns {string} A random letter in the alphabet"," */","exports.alphabet = function () {","    var letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz '.split('');","    return letters[utils.randBetween(0, letters.length)];","};","","/**"," * Returns a random linear node for linear genetic programming"," * @param {LinearIndividual} A linear individual to create a node for"," * @returns {LinearGPNode} A random linear node"," */","exports.linearNode = function (individual) {","    var options = individual.options;","    var totalFunctions = options.functionSet.length + options.conditionalSet.length;","    var functionProbability = options.functionSet.length / totalFunctions;","    if (utils.random() < functionProbability) {","        var func = utils.selectRandom(options.functionSet)","        return new LinearFunctionNode(func, options.registerSet);","    } else {","        var func = utils.selectRandom(options.conditionalSet)","        return new LinearConditionalNode(func, options.registerSet);","    }","};"],"l":{"1":1,"2":1,"3":1,"9":1,"10":0,"17":1,"18":0,"25":1,"26":0,"33":1,"34":0,"35":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearFunctionNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearFunctionNode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":54}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":49},"end":{"line":27,"column":72}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":39},"end":{"line":37,"column":62}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":40},"end":{"line":46,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":58}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"4":{"start":{"line":13,"column":0},"end":{"line":18,"column":2}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":47}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":31}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":40}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":16}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":27,"column":0},"end":{"line":30,"column":2}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":78}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":16}},"13":{"start":{"line":37,"column":0},"end":{"line":40,"column":2}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":84}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":16}},"16":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":101}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":65}},"19":{"start":{"line":51,"column":0},"end":{"line":51,"column":48}}},"branchMap":{},"code":["var utils = require('./../../infrastructure/utils');","var LinearGPNode = require('./linearGPNode').LinearGPNode;","var registerReference = require('./registerReference');","","/**"," * Linear genetic programming function node"," * @constructor"," * @extends LinearGPNode"," * @param {function} func - A function that this node will represent"," * @param {RegisterSet} registerSet - A register set instance"," * @property {RegisterReference} targetRegister - A target register reference"," */","var LinearFunctionNode = function (func, registerSet) {","    LinearGPNode.call(this, func, registerSet);","    this.targetRegister = null;","    this.setTargetRegister(registerSet);","    return this;","};","","utils.inherits(LinearFunctionNode, LinearGPNode);","","/**"," * Randomly sets the target register based on the provided register set"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {LinearFunctionNode} Reference to current object for chaining"," */","LinearFunctionNode.prototype.setTargetRegister = function (registerSet) {","    this.targetRegister = registerReference.createRandomWritable(registerSet);","    return this;","};","","/**"," * Sets the target register value based on the return value of the function from the given register set"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {LinearFunctionNode} Reference to current object for chaining"," */","LinearFunctionNode.prototype.execute = function (registerSet) {","    this.targetRegister.setValue(registerSet, this.getFuncReturnValue(registerSet));","    return this;","};","","/**"," * Returns a string representation of the linear function node"," * @returns {string} A string representation of the linear function node"," */","LinearFunctionNode.prototype.toString = function () {","    var argumentsArray = [this.targetRegister.toString(), this.func.name, this.getArgumentsString()];","    return utils.formatString(\"{0} = {1}({2});\", argumentsArray);","};","","exports.LinearFunctionNode = LinearFunctionNode;"],"l":{"1":1,"2":1,"3":1,"13":1,"14":0,"15":0,"16":0,"17":0,"20":1,"27":1,"28":0,"29":0,"37":1,"38":0,"39":0,"46":1,"47":0,"48":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearGPNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearGPNode.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":19},"end":{"line":12,"column":48}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":43},"end":{"line":23,"column":66}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":44},"end":{"line":36,"column":67}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":44},"end":{"line":48,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":12,"column":0},"end":{"line":16,"column":2}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":21}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":40}},"7":{"start":{"line":23,"column":0},"end":{"line":29,"column":2}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":29}},"9":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"10":{"start":{"line":26,"column":8},"end":{"line":26,"column":86}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"12":{"start":{"line":36,"column":0},"end":{"line":42,"column":2}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":23}},"14":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":69}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":44}},"17":{"start":{"line":48,"column":0},"end":{"line":57,"column":2}},"18":{"start":{"line":49,"column":4},"end":{"line":49,"column":23}},"19":{"start":{"line":50,"column":4},"end":{"line":55,"column":5}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":55}},"21":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"22":{"start":{"line":53,"column":12},"end":{"line":53,"column":30}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":21}},"24":{"start":{"line":59,"column":0},"end":{"line":59,"column":36}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]}},"code":["var registerReference = require('./registerReference');","var utils = require('./../../infrastructure/utils');","","/**"," * Linear genetic programming node"," * @constructor"," * @param {function} func - A function that this node will represent"," * @param {RegisterSet} registerSet - A register set instance"," * @property {function} func - Linear indivdual options"," * @property {RegisterReference[]} inputRegisters - An array of register references"," */","var LinearGPNode = function (func, registerSet) {","    this.func = func;","    this.inputRegisters = null;","    this.setInputRegisters(registerSet);","};","","/**"," * Randomly sets two input registers based on the provided register set"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {LinearGPNode} Reference to current object for chaining"," */","LinearGPNode.prototype.setInputRegisters = function (registerSet) {","    this.inputRegisters = [];","    for (var i = 0; i < this.func.length; i++) {","        this.inputRegisters.push(registerReference.createRandomReadable(registerSet));","    }","    return this;","};","","/**"," * Returns the value returned by the nodes function based on the input values from a given register set"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {*} Functon return value"," */","LinearGPNode.prototype.getFuncReturnValue = function (registerSet) {","    var arguments = [];","    for (var i = 0; i < this.inputRegisters.length; i++) {","        arguments.push(this.inputRegisters[i].getValue(registerSet));","    }","    return this.func.apply(this, arguments);","};","","/**"," * Returns a comma seperated string of input registers"," * @returns {string} A comma seperated string of input registers"," */","LinearGPNode.prototype.getArgumentsString = function () {","    var arguments = \"\";","    for (var i = 0; i < this.inputRegisters.length; i++) {","        arguments += this.inputRegisters[i].toString();","        if (i !== this.inputRegisters.length - 1) {","            arguments += \", \";","        }","    }","    return arguments;","};","","exports.LinearGPNode = LinearGPNode;"],"l":{"1":1,"2":1,"12":1,"13":0,"14":0,"15":0,"23":1,"24":0,"25":0,"26":0,"28":0,"36":1,"37":0,"38":0,"39":0,"41":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"56":0,"59":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/registerReference.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/registerReference.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":24},"end":{"line":12,"column":60}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":45},"end":{"line":30,"column":68}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":39},"end":{"line":48,"column":62}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":39},"end":{"line":58,"column":69}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":39},"end":{"line":72,"column":51}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":22},"end":{"line":82,"column":52}}},"7":{"name":"(anonymous_7)","line":92,"loc":{"start":{"line":92,"column":25},"end":{"line":92,"column":55}}},"8":{"name":"(anonymous_8)","line":102,"loc":{"start":{"line":102,"column":28},"end":{"line":102,"column":58}}},"9":{"name":"(anonymous_9)","line":112,"loc":{"start":{"line":112,"column":23},"end":{"line":112,"column":53}}},"10":{"name":"(anonymous_10)","line":121,"loc":{"start":{"line":121,"column":31},"end":{"line":121,"column":54}}},"11":{"name":"(anonymous_11)","line":139,"loc":{"start":{"line":139,"column":31},"end":{"line":139,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":12,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":40}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"6":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":41}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":16}},"10":{"start":{"line":30,"column":0},"end":{"line":41,"column":2}},"11":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":73}},"13":{"start":{"line":33,"column":11},"end":{"line":39,"column":5}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":68}},"15":{"start":{"line":35,"column":11},"end":{"line":39,"column":5}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":67}},"17":{"start":{"line":38,"column":8},"end":{"line":38,"column":66}},"18":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"19":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":46}},"21":{"start":{"line":58,"column":0},"end":{"line":65,"column":2}},"22":{"start":{"line":59,"column":4},"end":{"line":63,"column":5}},"23":{"start":{"line":60,"column":8},"end":{"line":60,"column":64}},"24":{"start":{"line":62,"column":8},"end":{"line":62,"column":51}},"25":{"start":{"line":64,"column":4},"end":{"line":64,"column":16}},"26":{"start":{"line":72,"column":0},"end":{"line":74,"column":2}},"27":{"start":{"line":73,"column":4},"end":{"line":73,"column":79}},"28":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"29":{"start":{"line":83,"column":4},"end":{"line":83,"column":68}},"30":{"start":{"line":92,"column":0},"end":{"line":94,"column":2}},"31":{"start":{"line":93,"column":4},"end":{"line":93,"column":71}},"32":{"start":{"line":102,"column":0},"end":{"line":104,"column":2}},"33":{"start":{"line":103,"column":4},"end":{"line":103,"column":74}},"34":{"start":{"line":112,"column":0},"end":{"line":114,"column":2}},"35":{"start":{"line":113,"column":4},"end":{"line":113,"column":69}},"36":{"start":{"line":121,"column":0},"end":{"line":132,"column":2}},"37":{"start":{"line":122,"column":4},"end":{"line":122,"column":32}},"38":{"start":{"line":123,"column":4},"end":{"line":131,"column":5}},"39":{"start":{"line":124,"column":8},"end":{"line":124,"column":48}},"40":{"start":{"line":125,"column":11},"end":{"line":131,"column":5}},"41":{"start":{"line":126,"column":8},"end":{"line":126,"column":51}},"42":{"start":{"line":127,"column":11},"end":{"line":131,"column":5}},"43":{"start":{"line":128,"column":8},"end":{"line":128,"column":54}},"44":{"start":{"line":130,"column":8},"end":{"line":130,"column":49}},"45":{"start":{"line":139,"column":0},"end":{"line":146,"column":2}},"46":{"start":{"line":140,"column":4},"end":{"line":140,"column":32}},"47":{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},"48":{"start":{"line":142,"column":8},"end":{"line":142,"column":54}},"49":{"start":{"line":144,"column":8},"end":{"line":144,"column":49}},"50":{"start":{"line":148,"column":0},"end":{"line":148,"column":24}},"51":{"start":{"line":149,"column":0},"end":{"line":149,"column":27}},"52":{"start":{"line":150,"column":0},"end":{"line":150,"column":29}},"53":{"start":{"line":151,"column":0},"end":{"line":151,"column":23}},"54":{"start":{"line":152,"column":0},"end":{"line":152,"column":46}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":11}},{"start":{"line":33,"column":11},"end":{"line":33,"column":11}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":11}},{"start":{"line":35,"column":11},"end":{"line":35,"column":11}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"7":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":41}},{"start":{"line":59,"column":45},"end":{"line":59,"column":73}}]},"8":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"9":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":11},"end":{"line":125,"column":11}},{"start":{"line":125,"column":11},"end":{"line":125,"column":11}}]},"10":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":15},"end":{"line":125,"column":27}},{"start":{"line":125,"column":31},"end":{"line":125,"column":59}}]},"11":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":11},"end":{"line":127,"column":11}},{"start":{"line":127,"column":11},"end":{"line":127,"column":11}}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":15},"end":{"line":127,"column":28}},{"start":{"line":127,"column":32},"end":{"line":127,"column":59}}]},"13":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"14":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":20}},{"start":{"line":141,"column":24},"end":{"line":141,"column":51}}]}},"code":["var utils = require('./../../infrastructure/utils');","","/**"," * Linear genetic programming register reference"," * @constructor"," * @param {string} flag - The register set property name"," * @param {RegisterSet} registerSet - The register set to randomly select an index from"," * @param {number} index - Optional user specified index"," * @property {string} flag - The register set property name"," * @property {number} index - The register set array index"," */","var RegisterReference = function (flag, registerSet, index) {","    if (!registerSet[flag]) {","        throw \"Property does not exist\";","    }","    this.flag = flag;","    if (index !== undefined) {","        this.index = index;","    } else {","        this.setRandomIndex(registerSet);","    }","    return this;","};","","/**"," * Sets the index property to a random value based on the provided register set"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {RegisterReference} Reference to current object for chaining"," */","RegisterReference.prototype.setRandomIndex = function (registerSet) {","    if (this.flag === exports.INPUT) {","        this.index = utils.randBetween(0, registerSet.options.numInputs);","    } else if (this.flag === exports.CONSTANT) {","        this.index = utils.randBetween(0, registerSet.const.length);","    } else if (this.flag === exports.CALCULATION) {","        this.index = utils.randBetween(0, registerSet.calc.length);","    } else {","        this.index = utils.randBetween(0, registerSet.out.length);","    }","    return this;","};","","/**"," * Gets the value that this register reference represents in the given register set"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {*} Value from the register set"," */","RegisterReference.prototype.getValue = function (registerSet) {","    return registerSet[this.flag][this.index];","};","","/**"," * Sets the value that this register reference represents in the given register set"," * @param {RegisterSet} registerSet - A register set instance"," * @param {*} value - A value to set"," * @returns {RegisterReference} Reference to current object for chaining"," */","RegisterReference.prototype.setValue = function (registerSet, value) {","    if (this.flag !== exports.CALCULATION && this.flag !== exports.OUTPUT) {","        throw \"only calculation or output registers can be set\";","    } else {","        registerSet[this.flag][this.index] = value;","    }","    return this;","};","","/**"," * Returns a string representation of register reference"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {string} A string representation of the register reference"," */","RegisterReference.prototype.toString = function () {","    return utils.formatString(\"registerSet.{0}[{1}]\", [this.flag, this.index]);","};","","/**"," * Returns a new input register reference"," * @param {RegisterSet} registerSet - A register set instance"," * @param {number} index - Optional user specified index"," * @returns {RegisterReference} A new input register reference"," */","exports.createInput = function (registerSet, index) {","    return new RegisterReference(exports.INPUT, registerSet, index);","};","","/**"," * Returns a new constant register reference"," * @param {RegisterSet} registerSet - A register set instance"," * @param {number} index - Optional user specified index"," * @returns {RegisterReference} A new constant register reference"," */","exports.createConstant = function (registerSet, index) {","    return new RegisterReference(exports.CONSTANT, registerSet, index);","};","","/**"," * Returns a new calculation register reference"," * @param {RegisterSet} registerSet - A register set instance"," * @param {number} index - Optional user specified index"," * @returns {RegisterReference} A new calculation register reference"," */","exports.createCalculation = function (registerSet, index) {","    return new RegisterReference(exports.CALCULATION, registerSet, index);","};","","/**"," * Returns a new output register reference"," * @param {RegisterSet} registerSet - A register set instance"," * @param {number} index - Optional user specified index"," * @returns {RegisterReference} A new output register reference"," */","exports.createOutput = function (registerSet, index) {","    return new RegisterReference(exports.OUTPUT, registerSet, index);","};","","/**"," * Creates a random readable register reference"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {RegisterReference} A new readable register reference"," */","exports.createRandomReadable = function (registerSet) {","    var random = utils.random();","    if (random < 0.25) {","        return exports.createInput(registerSet);","    } else if (random < 0.5 && registerSet.const.length > 0) {","        return exports.createConstant(registerSet);","    } else if (random < 0.75 && registerSet.calc.length > 0) {","        return exports.createCalculation(registerSet);","    } else {","        return exports.createOutput(registerSet);","    }","};","","/**"," * Creates a random writable register reference"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {RegisterReference} A new writable register reference"," */","exports.createRandomWritable = function (registerSet) {","    var random = utils.random();","    if (random < 0.5 && registerSet.calc.length > 0) {","        return exports.createCalculation(registerSet);","    } else {","        return exports.createOutput(registerSet);","    }","};","","exports.INPUT = 'input';","exports.CONSTANT = 'const';","exports.CALCULATION = 'calc';","exports.OUTPUT = 'out';","exports.RegisterReference = RegisterReference;"],"l":{"1":1,"12":1,"13":0,"14":0,"16":0,"17":0,"18":0,"20":0,"22":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"40":0,"48":1,"49":0,"58":1,"59":0,"60":0,"62":0,"64":0,"72":1,"73":0,"82":1,"83":0,"92":1,"93":0,"102":1,"103":0,"112":1,"113":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"139":1,"140":0,"141":0,"142":0,"144":0,"148":1,"149":1,"150":1,"151":1,"152":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearConditionalNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearConditionalNode.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":28},"end":{"line":11,"column":55}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":43},"end":{"line":21,"column":55}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":42},"end":{"line":30,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":45}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":52}},"6":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":92}},"8":{"start":{"line":30,"column":0},"end":{"line":32,"column":2}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":48}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":54}}},"branchMap":{},"code":["var LinearGPNode = require('./linearGPNode').LinearGPNode;","var utils = require('./../../infrastructure/utils');","","/**"," * Linear genetic programming conditional node"," * @constructor"," * @extends LinearGPNode"," * @param {function} func - A function that this node will represent"," * @param {RegisterSet} registerSet - A register set instance"," */","var LinearConditionalNode = function (func, registers) {","    LinearGPNode.call(this, func, registers);","};","","utils.inherits(LinearConditionalNode, LinearGPNode);","","/**"," * Returns a string representation of the linear conditional node"," * @returns {string} A string representation of the linear conditional node"," */","LinearConditionalNode.prototype.toString = function () {","    return utils.formatString(\"if ({0}({1}))\", [this.func.name, this.getArgumentsString()]);","};","","/**"," * Returns the return value of the function from the given register set"," * @param {RegisterSet} registerSet - A register set instance"," * @returns {boolean} The return value of the function from the given register set"," */","LinearConditionalNode.prototype.execute = function (registerSet) {","    return this.getFuncReturnValue(registerSet);","};","","exports.LinearConditionalNode = LinearConditionalNode;"],"l":{"1":1,"2":1,"11":1,"12":0,"15":1,"21":1,"22":0,"30":1,"31":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/registerSet.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/registerSet.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":30},"end":{"line":34,"column":42}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":34},"end":{"line":58,"column":52}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":33},"end":{"line":72,"column":45}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":48},"end":{"line":81,"column":60}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":40},"end":{"line":97,"column":52}}},"7":{"name":"(anonymous_7)","line":108,"loc":{"start":{"line":108,"column":55},"end":{"line":108,"column":67}}},"8":{"name":"(anonymous_8)","line":134,"loc":{"start":{"line":134,"column":39},"end":{"line":134,"column":51}}},"9":{"name":"(anonymous_9)","line":142,"loc":{"start":{"line":142,"column":50},"end":{"line":142,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":21,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":27}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":20}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":20}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":19}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":20}},"10":{"start":{"line":34,"column":0},"end":{"line":50,"column":2}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":10}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":20}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":20}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":19}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":18}},"16":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"17":{"start":{"line":41,"column":8},"end":{"line":41,"column":55}},"18":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"19":{"start":{"line":44,"column":8},"end":{"line":44,"column":61}},"20":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"21":{"start":{"line":47,"column":8},"end":{"line":47,"column":55}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"23":{"start":{"line":58,"column":0},"end":{"line":65,"column":2}},"24":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"25":{"start":{"line":60,"column":8},"end":{"line":60,"column":64}},"26":{"start":{"line":62,"column":4},"end":{"line":62,"column":17}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":24}},"28":{"start":{"line":64,"column":4},"end":{"line":64,"column":16}},"29":{"start":{"line":72,"column":0},"end":{"line":74,"column":2}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":94}},"31":{"start":{"line":81,"column":0},"end":{"line":90,"column":2}},"32":{"start":{"line":82,"column":4},"end":{"line":88,"column":5}},"33":{"start":{"line":83,"column":8},"end":{"line":83,"column":37}},"34":{"start":{"line":84,"column":11},"end":{"line":88,"column":5}},"35":{"start":{"line":85,"column":8},"end":{"line":85,"column":46}},"36":{"start":{"line":86,"column":11},"end":{"line":88,"column":5}},"37":{"start":{"line":87,"column":8},"end":{"line":87,"column":48}},"38":{"start":{"line":89,"column":4},"end":{"line":89,"column":16}},"39":{"start":{"line":97,"column":0},"end":{"line":102,"column":2}},"40":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"41":{"start":{"line":99,"column":8},"end":{"line":99,"column":78}},"42":{"start":{"line":101,"column":4},"end":{"line":101,"column":16}},"43":{"start":{"line":108,"column":0},"end":{"line":128,"column":2}},"44":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"45":{"start":{"line":110,"column":8},"end":{"line":110,"column":34}},"46":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"47":{"start":{"line":113,"column":8},"end":{"line":113,"column":36}},"48":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"49":{"start":{"line":116,"column":8},"end":{"line":116,"column":38}},"50":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"51":{"start":{"line":119,"column":8},"end":{"line":119,"column":49}},"52":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"53":{"start":{"line":122,"column":8},"end":{"line":122,"column":44}},"54":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"55":{"start":{"line":125,"column":8},"end":{"line":125,"column":49}},"56":{"start":{"line":127,"column":4},"end":{"line":127,"column":16}},"57":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"58":{"start":{"line":135,"column":4},"end":{"line":135,"column":27}},"59":{"start":{"line":142,"column":0},"end":{"line":144,"column":2}},"60":{"start":{"line":143,"column":4},"end":{"line":143,"column":46}},"61":{"start":{"line":146,"column":0},"end":{"line":146,"column":34}}},"branchMap":{"1":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"2":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"3":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":11},"end":{"line":84,"column":11}},{"start":{"line":84,"column":11},"end":{"line":84,"column":11}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":11},"end":{"line":86,"column":11}},{"start":{"line":86,"column":11},"end":{"line":86,"column":11}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"6":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"7":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"8":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"9":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"10":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"11":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]}},"code":["var utils = require('./../../infrastructure/utils');","var clone = require('clone');","","/**"," * Linear genetic programming register set"," * @constructor"," * @param {object} options - Register set options"," * @param {number} options.numInputs - The number of input registers"," * @param {number} options.numOutputs - The number of output registers"," * @param {number} [options.constMin=1] - Minimum constant value"," * @param {number} [options.constMax=100] - Maxmimum constant value"," * @param {number} [options.constDivider=1] - Value to divide each constant value by"," * @param {number} [options.defaultCalculationValue=0] - Value to divide each constant value by"," * @param {number} [options.defaultOutputValue=0] - Value to divide each constant value by"," * @param {number} [options.numCalculationRegisters=5] - Value to divide each constant value by"," * @property {object[]} input - Input registers"," * @property {number[]} const - Constant registers"," * @property {number[]} calc - Calculation registers"," * @property {object[]} out - Output registers"," */","var RegisterSet = function (options) {","    this.options = options;","    this.input = [];","    this.const = [];","    this.calc = [];","    this.out = [];","    this.validate();","};","","/**"," * Resets all registers"," * @returns {RegisterSet} Reference to current object for chaining"," */","RegisterSet.prototype.reset = function () {","    var i;","    this.input = [];","    this.const = [];","    this.calc = [];","    this.out = [];","    for (i = this.options.constMin; i < this.options.constMax; i++) {","        this.const.push(i / this.options.constDivider);","    }","    for (i = 0; i < this.options.numCalculationRegisters; i++) {","        this.calc.push(this.options.defaultCalculationValue);","    }","    for (i = 0; i < this.options.numOutputs; i++) {","        this.out.push(this.options.defaultOutputValue);","    }","    return this;","};","","/**"," * Set the input registers"," * @param {object[]} inputs - An array of inputs"," * @throws An exception is thrown if the length of the input array does not match options.numInputs"," * @returns {RegisterSet} Reference to current object for chaining"," */","RegisterSet.prototype.setInputs = function (inputs) {","    if (inputs.length !== this.options.numInputs) {","        throw \"length of inputs does not equal expected length\";","    }","    this.reset();","    this.input = inputs;","    return this;","};","","/**"," * Validates the register set"," * @throws An exception is thrown if validation fails"," * @returns {RegisterSet} Reference to current object for chaining"," */","RegisterSet.prototype.validate = function () {","    this.setDefaultOptionsIfNotProvided().validateRequiredOptions().validateOptions().reset();","};","","/**"," * Throws an exception if a required option is missing"," * @throws An exception is thrown if a required option is missing"," * @returns {RegisterSet} Reference to current object for chaining"," */","RegisterSet.prototype.validateRequiredOptions = function () {","    if (!this.options) {","        throw \"options are required\";","    } else if (!this.options.numInputs) {","        throw \"option 'numInputs is required\";","    } else if (!this.options.numOutputs) {","        throw \"option 'numOutputs' is required\";","    }","    return this;","};","","/**"," * Throws an exception if any option values are invalid"," * @throws An exception is thrown if any option values are invalid"," * @returns {RegisterSet} Reference to current object for chaining"," */","RegisterSet.prototype.validateOptions = function () {","    if (this.options.constMin > this.options.constMax) {","        throw \"value for option 'constMin' cannot be greater than 'constMax'\";","    }","    return this;","};","","/**"," * Sets default values for options that have not been defined"," * @returns {RegisterSet} Reference to current object for chaining"," */","RegisterSet.prototype.setDefaultOptionsIfNotProvided = function () {","    if (this.options.constMin === undefined) {","        this.options.constMin = 1;","    }","    if (this.options.constMax === undefined) {","        this.options.constMax = 100;","    }","    if (this.options.constDivider === undefined) {","        this.options.constDivider = 1;","    }","    if (this.options.defaultCalculationValue === undefined) {","        this.options.defaultCalculationValue = 0;","    }","    if (this.options.defaultOutputValue === undefined) {","        this.options.defaultOutputValue = 0;","    }","    if (this.options.numCalculationRegisters === undefined) {","        this.options.numCalculationRegisters = 5;","    }","    return this;","};","","/**"," * Returns a deep copy of the register set output array"," * @returns {object[]} A deep copy of the register set output array"," */","RegisterSet.prototype.getOutputNodes = function () {","    return clone(this.out);","};","","/**"," * Returns the total number of writable registers"," * @returns {number} The total number of writable registers"," */","RegisterSet.prototype.getTotalWritableRegisters = function () {","    return this.calc.length + this.out.length;","};","","exports.RegisterSet = RegisterSet;"],"l":{"1":1,"2":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"49":0,"58":1,"59":0,"60":0,"62":0,"63":0,"64":0,"72":1,"73":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"97":1,"98":0,"99":0,"101":0,"108":1,"109":0,"110":0,"112":0,"113":0,"115":0,"116":0,"118":0,"119":0,"121":0,"122":0,"124":0,"125":0,"127":0,"134":1,"135":0,"142":1,"143":0,"146":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearIndividual.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/genetic/linear/linearIndividual.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":23},"end":{"line":21,"column":42}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":53},"end":{"line":36,"column":65}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":60},"end":{"line":52,"column":72}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":37},"end":{"line":66,"column":55}}},"5":{"name":"(anonymous_5)","line":94,"loc":{"start":{"line":94,"column":43},"end":{"line":94,"column":55}}},"6":{"name":"(anonymous_6)","line":142,"loc":{"start":{"line":142,"column":38},"end":{"line":142,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":76}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":85}},"8":{"start":{"line":21,"column":0},"end":{"line":27,"column":2}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":27}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":68}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":42}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":35}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"14":{"start":{"line":29,"column":0},"end":{"line":29,"column":45}},"15":{"start":{"line":36,"column":0},"end":{"line":46,"column":2}},"16":{"start":{"line":37,"column":4},"end":{"line":37,"column":60}},"17":{"start":{"line":38,"column":4},"end":{"line":44,"column":5}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":47}},"19":{"start":{"line":40,"column":11},"end":{"line":44,"column":5}},"20":{"start":{"line":41,"column":8},"end":{"line":41,"column":48}},"21":{"start":{"line":42,"column":11},"end":{"line":44,"column":5}},"22":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"23":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"24":{"start":{"line":52,"column":0},"end":{"line":59,"column":2}},"25":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":42}},"27":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"28":{"start":{"line":57,"column":8},"end":{"line":57,"column":41}},"29":{"start":{"line":66,"column":0},"end":{"line":88,"column":2}},"30":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"31":{"start":{"line":68,"column":8},"end":{"line":68,"column":29}},"32":{"start":{"line":70,"column":4},"end":{"line":70,"column":14}},"33":{"start":{"line":71,"column":4},"end":{"line":71,"column":47}},"34":{"start":{"line":72,"column":4},"end":{"line":86,"column":5}},"35":{"start":{"line":73,"column":8},"end":{"line":73,"column":32}},"36":{"start":{"line":74,"column":8},"end":{"line":84,"column":9}},"37":{"start":{"line":75,"column":12},"end":{"line":75,"column":51}},"38":{"start":{"line":76,"column":15},"end":{"line":84,"column":9}},"39":{"start":{"line":77,"column":12},"end":{"line":81,"column":13}},"40":{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},"41":{"start":{"line":79,"column":20},"end":{"line":79,"column":24}},"42":{"start":{"line":83,"column":12},"end":{"line":83,"column":38}},"43":{"start":{"line":85,"column":8},"end":{"line":85,"column":12}},"44":{"start":{"line":87,"column":4},"end":{"line":87,"column":53}},"45":{"start":{"line":94,"column":0},"end":{"line":136,"column":2}},"46":{"start":{"line":95,"column":4},"end":{"line":95,"column":24}},"47":{"start":{"line":96,"column":4},"end":{"line":96,"column":32}},"48":{"start":{"line":97,"column":4},"end":{"line":97,"column":34}},"49":{"start":{"line":98,"column":4},"end":{"line":98,"column":32}},"50":{"start":{"line":99,"column":4},"end":{"line":134,"column":5}},"51":{"start":{"line":100,"column":8},"end":{"line":100,"column":32}},"52":{"start":{"line":101,"column":8},"end":{"line":132,"column":9}},"53":{"start":{"line":102,"column":12},"end":{"line":108,"column":13}},"54":{"start":{"line":104,"column":16},"end":{"line":104,"column":39}},"55":{"start":{"line":106,"column":16},"end":{"line":106,"column":39}},"56":{"start":{"line":107,"column":16},"end":{"line":107,"column":68}},"57":{"start":{"line":110,"column":12},"end":{"line":131,"column":13}},"58":{"start":{"line":111,"column":16},"end":{"line":111,"column":39}},"59":{"start":{"line":113,"column":16},"end":{"line":113,"column":42}},"60":{"start":{"line":114,"column":16},"end":{"line":130,"column":17}},"61":{"start":{"line":115,"column":20},"end":{"line":115,"column":44}},"62":{"start":{"line":116,"column":20},"end":{"line":123,"column":21}},"63":{"start":{"line":117,"column":24},"end":{"line":117,"column":54}},"64":{"start":{"line":118,"column":24},"end":{"line":122,"column":25}},"65":{"start":{"line":120,"column":28},"end":{"line":120,"column":47}},"66":{"start":{"line":121,"column":28},"end":{"line":121,"column":34}},"67":{"start":{"line":124,"column":20},"end":{"line":129,"column":21}},"68":{"start":{"line":125,"column":24},"end":{"line":125,"column":76}},"69":{"start":{"line":127,"column":24},"end":{"line":127,"column":47}},"70":{"start":{"line":128,"column":24},"end":{"line":128,"column":49}},"71":{"start":{"line":133,"column":8},"end":{"line":133,"column":12}},"72":{"start":{"line":135,"column":4},"end":{"line":135,"column":16}},"73":{"start":{"line":142,"column":0},"end":{"line":159,"column":2}},"74":{"start":{"line":143,"column":4},"end":{"line":143,"column":22}},"75":{"start":{"line":144,"column":4},"end":{"line":144,"column":23}},"76":{"start":{"line":145,"column":4},"end":{"line":145,"column":13}},"77":{"start":{"line":146,"column":4},"end":{"line":157,"column":5}},"78":{"start":{"line":147,"column":8},"end":{"line":147,"column":32}},"79":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"80":{"start":{"line":149,"column":12},"end":{"line":149,"column":29}},"81":{"start":{"line":151,"column":8},"end":{"line":151,"column":43}},"82":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"83":{"start":{"line":153,"column":12},"end":{"line":153,"column":27}},"84":{"start":{"line":155,"column":12},"end":{"line":155,"column":28}},"85":{"start":{"line":158,"column":4},"end":{"line":158,"column":20}},"86":{"start":{"line":161,"column":0},"end":{"line":161,"column":44}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":11}},{"start":{"line":40,"column":11},"end":{"line":40,"column":11}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":11},"end":{"line":42,"column":11}},{"start":{"line":42,"column":11},"end":{"line":42,"column":11}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":15},"end":{"line":76,"column":15}},{"start":{"line":76,"column":15},"end":{"line":76,"column":15}}]},"9":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":12}},{"start":{"line":77,"column":12},"end":{"line":77,"column":12}}]},"10":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":11},"end":{"line":99,"column":17}},{"start":{"line":99,"column":21},"end":{"line":99,"column":62}}]},"11":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"12":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":12}},{"start":{"line":102,"column":12},"end":{"line":102,"column":12}}]},"13":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":53}},{"start":{"line":103,"column":16},"end":{"line":103,"column":69}}]},"14":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"15":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":33}},{"start":{"line":110,"column":37},"end":{"line":110,"column":74}}]},"16":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":114,"column":16}},{"start":{"line":114,"column":16},"end":{"line":114,"column":16}}]},"17":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":24},"end":{"line":118,"column":24}},{"start":{"line":118,"column":24},"end":{"line":118,"column":24}}]},"18":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":28},"end":{"line":118,"column":71}},{"start":{"line":119,"column":28},"end":{"line":119,"column":73}}]},"19":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":20},"end":{"line":124,"column":20}},{"start":{"line":124,"column":20},"end":{"line":124,"column":20}}]},"20":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]}},"code":["var clone = require('clone');","var utils = require('./../../infrastructure/utils');","var Individual = require('./../individual').Individual;","var RegisterSet = require('./registerSet').RegisterSet;","var registerReference = require('./registerReference');","var LinearFunctionNode = require('./linearFunctionNode').LinearFunctionNode;","var LinearConditionalNode = require('./linearConditionalNode').LinearConditionalNode;","","/**"," * Linear genetic programming individual"," * @constructor"," * @extends Individual"," * @param {object} options - Linear indivdual options"," * @param {number} options.numInputs - The number of inputs that the individual accepts"," * @param {number} options.numOutputs - The number of output the individual should return"," * @param {function[]} options.functionSet - An array of functions that are made available to the individual"," * @param {boolean} [options.removeIntrons=true] - Specify whether introns should be removed before execution"," * @param {function[]} [options.conditionalSet=[]] - An array of functions that can be used to control logic"," * @property {object} options - Linear indivdual options"," */","var LinearIndividual = function (options) {","    this.options = options;","    this.options.registerSet = new RegisterSet(clone(this.options));","    this.setDefaultOptionsIfNotProvided();","    Individual.call(this, options);","    return this;","};","","utils.inherits(LinearIndividual, Individual);","","/**"," * Validates the linear individuals current options"," * @throws An exception will occur if a required option is missing"," * @returns {LinearIndividual} Reference to current object for chaining"," */","LinearIndividual.prototype.validateRequiredOptions = function () {","    Individual.prototype.validateRequiredOptions.call(this);","    if (!this.options.numInputs) {","        throw \"option 'numInputs' is required\";","    } else if (!this.options.numOutputs) {","        throw \"option 'numOutputs' is required\";","    } else if (!this.options.functionSet) {","        throw \"option 'functionSet' is required\";","    }","    return this;","};","","/**"," * Sets default values for options that have not been defined"," * @returns {LinearIndividual} Reference to current object for chaining"," */","LinearIndividual.prototype.setDefaultOptionsIfNotProvided = function () {","    if (this.options.removeIntrons === undefined) {","        this.options.removeIntrons = true;","    }","    if (!this.options.conditionalSet) {","        this.options.conditionalSet = [];","    }","};","","/**"," * Executes the liner code represented by the indivduals body"," * @param {object[]} An array of inputs"," * @returns {object[]} An array of outputs"," */","LinearIndividual.prototype.execute = function (inputs) {","    if (this.options.removeIntrons) {","        this.removeIntrons();","    }","    var i = 0;","    this.options.registerSet.setInputs(inputs);","    while (i < this.body.length) {","        var node = this.body[i];","        if (node instanceof LinearFunctionNode) {","            node.execute(this.options.registerSet);","        } else if (node instanceof LinearConditionalNode) {","            if (!node.execute(this.options.registerSet)) {","                while (this.body[i] instanceof LinearConditionalNode) {","                    i++;","                }","            }","        } else {","            throw \"unknown node type\";","        }","        i++;","    }","    return this.options.registerSet.getOutputNodes();","};","","/**"," * Removes all structurally noneffective code until the body length reaches the minimum allowed length"," * @returns {LinearIndividual} Reference to current object for chaining"," */","LinearIndividual.prototype.removeIntrons = function () {","    var references = [];","    var firstAssignment = false;","    var removeConditional = false;","    var i = this.body.length - 1","    while (i >= 0 && this.body.length > this.options.minLength) {","        var node = this.body[i];","        if (!firstAssignment) {","            if (node instanceof LinearConditionalNode ||","                node.targetRegister.flag !== registerReference.OUTPUT) {","                this.body.splice(i, 1);","            } else {","                firstAssignment = true;","                references = references.concat(node.inputRegisters);","            }","        } else {","            if (removeConditional && node instanceof LinearConditionalNode) {","                this.body.splice(i, 1);","            } else {","                removeConditional = false;","                if (node instanceof LinearFunctionNode) {","                    var isEffective = false;","                    for (var j = 0; j < references.length; j++) {","                        var reference = references[j];","                        if (reference.flag === node.targetRegister.flag &&","                            reference.index === node.targetRegister.index) {","                            isEffective = true;","                            break;","                        }","                    }","                    if (isEffective) {","                        references = references.concat(node.inputRegisters);","                    } else {","                        this.body.splice(i, 1);","                        removeConditional = true;","                    }","                }","            }","        }","        i--;","    }","    return this;","};","","/**"," * Returns a string containing an executable representation of the individual"," * @returns {string} A string containing an executable representation of the individual"," */","LinearIndividual.prototype.toString = function () {","    var toReturn = \"\";","    var numIndents = 0;","    var i, j;","    for (i = 0; i < this.body.length; i++) {","        var node = this.body[i];","        for (j = 0; j < numIndents; j++) {","            toReturn += '\\t';","        }","        toReturn += node.toString() + '\\n';","        if (node instanceof LinearFunctionNode) {","            numIndents = 0;","        } else {","            numIndents += 1;","        }","    }","    return toReturn;","};","","exports.LinearIndividual = LinearIndividual;"],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"29":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"52":1,"53":0,"54":0,"56":0,"57":0,"66":1,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"83":0,"85":0,"87":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"104":0,"106":0,"107":0,"110":0,"111":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"120":0,"121":0,"124":0,"125":0,"127":0,"128":0,"133":0,"135":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"155":0,"158":0,"161":1}},"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/neural/transferFunctions.js":{"path":"/home/travis/build/npmtest/node-npmtest-intelligence/node_modules/intelligence/src/neural/transferFunctions.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":20},"end":{"line":7,"column":37}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":30},"end":{"line":16,"column":47}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":34}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":27},"end":{"line":34,"column":44}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":38}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":35},"end":{"line":58,"column":52}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":30}},"3":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":31}},"5":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"6":{"start":{"line":26,"column":4},"end":{"line":26,"column":17}},"7":{"start":{"line":34,"column":0},"end":{"line":42,"column":2}},"8":{"start":{"line":35,"column":4},"end":{"line":41,"column":5}},"9":{"start":{"line":36,"column":8},"end":{"line":36,"column":17}},"10":{"start":{"line":37,"column":11},"end":{"line":41,"column":5}},"11":{"start":{"line":38,"column":8},"end":{"line":38,"column":17}},"12":{"start":{"line":40,"column":8},"end":{"line":40,"column":21}},"13":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":37}},"15":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}},"16":{"start":{"line":59,"column":4},"end":{"line":59,"column":87}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":25}},{"start":{"line":8,"column":28},"end":{"line":8,"column":29}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":24},"end":{"line":17,"column":25}},{"start":{"line":17,"column":28},"end":{"line":17,"column":30}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":11},"end":{"line":37,"column":11}},{"start":{"line":37,"column":11},"end":{"line":37,"column":11}}]}},"code":["","/**"," * Performs hard limit transfer"," * @param {number} input - Sum of neuron weighted inputs"," * @returns {number} 1 if the input is greater than 0, else 0"," */","exports.hardLimit = function (input) {","    return input >= 0 ? 1 : 0;","};","","/**"," * Performs symetrical hard limit transfer"," * @param {number} input - Sum of neuron weighted inputs"," * @returns {number} 1 if the input is greater than 0, else -1"," */","exports.symetricalHardLimit = function (input) {","    return input >= 0 ? 1 : -1;","};","","/**"," * Performs linear transfer"," * @param {number} input - Sum of neuron weighted inputs"," * @returns {number} The same, un modified value provided as input"," */","exports.linear = function (input) {","    return input;","};","","/**"," * Performs saturating linear transfer"," * @param {number} input - Sum of neuron weighted inputs"," * @returns {number} The same value if between 0 and 1, otherwise 0 or 1 respectively"," */","exports.saturatingLinear = function (input) {","    if (input < 0) {","        return 0;","    } else if (input > 1) {","        return 1;","    } else {","        return input;","    }","};","","/**"," * Performs log sigmoid transfer"," * @param {number} input - Sum of neuron weighted inputs"," * @returns {number} The log sigmoid of the input value"," */","exports.logSigmoid = function (input) {","    return 1 / (1 + Math.exp(-input))","};","","/**"," * Performs hyperbolic tangent sigmoid transfer"," * @param {number} input - Sum of neuron weighted inputs"," * @returns {number} The hyperbolic tangent sigmoid of the input value"," */","exports.hyperbolicTangentSigmoid = function (input) {","    return (Math.exp(input) - Math.exp(-input)) / (Math.exp(input) + Math.exp(-input));","};"],"l":{"7":1,"8":0,"16":1,"17":0,"25":1,"26":0,"34":1,"35":0,"36":0,"37":0,"38":0,"40":0,"49":1,"50":0,"58":1,"59":0}}}